{"ast":null,"code":"var _jsxFileName = \"/Users/jamilahmed/assesment/reassment/frontend/src/pages/BookAppointment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookAppointment() {\n  _s();\n  const [patientName, setPatientName] = useState('');\n  const [email, setEmail] = useState('');\n  const [physiotherapistId, setPhysiotherapistId] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [physiotherapists, setPhysiotherapists] = useState([]);\n\n  // Load doctors when component mounts\n  useEffect(() => {\n    fetch('http://localhost:5000/physiotherapists').then(res => res.json()).then(data => setPhysiotherapists(data)).catch(err => console.error('Error loading physiotherapists:', err));\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!physiotherapistId) {\n      alert(\"Please select a physiotherapist.\");\n      return;\n    }\n    const appointment = {\n      patient_name: patientName,\n      email: email,\n      physiotherapist_id: physiotherapistId,\n      appointment_date: date,\n      appointment_time: time\n    };\n    try {\n      const res = await fetch('http://localhost:5000/book', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(appointment)\n      });\n      const text = await res.text();\n      alert(text);\n    } catch (err) {\n      alert(\"Error booking appointment\");\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Full Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: patientName,\n        onChange: e => setPatientName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Choose Physiotherapist:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: physiotherapistId,\n        onChange: e => setPhysiotherapistId(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), physiotherapists.map(doc => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: doc.id,\n          children: [doc.name, \" (\", doc.specialization, \")\"]\n        }, doc.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Appointment Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Appointment Time:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        value: time,\n        onChange: e => setTime(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(BookAppointment, \"HrtQ01N0UaO9VdDArT8ikhWACCE=\");\n_c = BookAppointment;\nexport default BookAppointment;\nvar _c;\n$RefreshReg$(_c, \"BookAppointment\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BookAppointment","_s","patientName","setPatientName","email","setEmail","physiotherapistId","setPhysiotherapistId","date","setDate","time","setTime","physiotherapists","setPhysiotherapists","fetch","then","res","json","data","catch","err","console","error","handleSubmit","e","preventDefault","alert","appointment","patient_name","physiotherapist_id","appointment_date","appointment_time","method","headers","body","JSON","stringify","text","onSubmit","children","type","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","required","map","doc","id","name","specialization","_c","$RefreshReg$"],"sources":["/Users/jamilahmed/assesment/reassment/frontend/src/pages/BookAppointment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction BookAppointment() {\n  const [patientName, setPatientName] = useState('');\n  const [email, setEmail] = useState('');\n  const [physiotherapistId, setPhysiotherapistId] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [physiotherapists, setPhysiotherapists] = useState([]);\n\n  // Load doctors when component mounts\n  useEffect(() => {\n    fetch('http://localhost:5000/physiotherapists')\n      .then(res => res.json())\n      .then(data => setPhysiotherapists(data))\n      .catch(err => console.error('Error loading physiotherapists:', err));\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!physiotherapistId) {\n      alert(\"Please select a physiotherapist.\");\n      return;\n    }\n\n    const appointment = {\n      patient_name: patientName,\n      email: email,\n      physiotherapist_id: physiotherapistId,\n      appointment_date: date,\n      appointment_time: time,\n    };\n\n    try {\n      const res = await fetch('http://localhost:5000/book', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(appointment),\n      });\n\n      const text = await res.text();\n      alert(text);\n    } catch (err) {\n      alert(\"Error booking appointment\");\n      console.error(err);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Full Name:\n        <input type=\"text\" value={patientName} onChange={(e) => setPatientName(e.target.value)} />\n      </label>\n      <label>\n        Email:\n        <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n      </label>\n      <label>\n        Choose Physiotherapist:\n        <select\n          value={physiotherapistId}\n          onChange={(e) => setPhysiotherapistId(e.target.value)}\n          required\n        >\n          <option value=\"\">-- Select --</option>\n          {physiotherapists.map((doc) => (\n            <option key={doc.id} value={doc.id}>\n              {doc.name} ({doc.specialization})\n            </option>\n          ))}\n        </select>\n      </label>\n      <label>\n        Appointment Date:\n        <input type=\"date\" value={date} onChange={(e) => setDate(e.target.value)} />\n      </label>\n      <label>\n        Appointment Time:\n        <input type=\"time\" value={time} onChange={(e) => setTime(e.target.value)} />\n      </label>\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n}\n\nexport default BookAppointment;\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}